{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useImageDimensions = void 0;\n\nvar react_1 = require(\"react\");\n\nvar react_native_1 = require(\"react-native-web/dist/index\");\n\nfunction useImageDimensions(source, headers) {\n  var _a = react_1.useState({\n    loading: true\n  }),\n      result = _a[0],\n      setResult = _a[1];\n\n  react_1.useEffect(function () {\n    try {\n      if (typeof source === 'number') {\n        var _a = react_native_1.Image.resolveAssetSource(source),\n            width = _a.width,\n            height = _a.height;\n\n        setResult({\n          dimensions: {\n            width: width,\n            height: height,\n            aspectRatio: width / height\n          },\n          loading: false\n        });\n        return;\n      }\n\n      if (typeof source === 'object' && source.uri) {\n        setResult({\n          loading: true\n        });\n\n        if (typeof headers === 'object') {\n          react_native_1.Image.getSizeWithHeaders(source.uri, headers, function (width, height) {\n            return setResult({\n              dimensions: {\n                width: width,\n                height: height,\n                aspectRatio: width / height\n              },\n              loading: false\n            });\n          }, function (error) {\n            return setResult({\n              error: error,\n              loading: false\n            });\n          });\n        } else {\n          react_native_1.Image.getSize(source.uri, function (width, height) {\n            return setResult({\n              dimensions: {\n                width: width,\n                height: height,\n                aspectRatio: width / height\n              },\n              loading: false\n            });\n          }, function (error) {\n            return setResult({\n              error: error,\n              loading: false\n            });\n          });\n        }\n\n        return;\n      }\n\n      throw new Error('not implemented');\n    } catch (error) {\n      setResult({\n        error: error,\n        loading: false\n      });\n    }\n  }, [typeof source === 'object' ? source.uri : source, headers]);\n  return result;\n}\n\nexports.useImageDimensions = useImageDimensions;","map":{"version":3,"sources":["../src/useImageDimensions.ts"],"names":[],"mappings":";;;;;;;AAAA,IAAA,OAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;;;AA0BA,SAAgB,kBAAhB,CACE,MADF,EAEE,OAFF,EAEqC;EAE7B,IAAA,EAAA,GAAsB,OAAA,CAAA,QAAA,CAAgC;IAAC,OAAO,EAAE;EAAV,CAAhC,CAAtB;EAAA,IAAC,MAAM,GAAA,EAAA,CAAA,CAAA,CAAP;EAAA,IAAS,SAAS,GAAA,EAAA,CAAA,CAAA,CAAlB;;EAEN,OAAA,CAAA,SAAA,CAAU,YAAA;IACR,IAAI;MACF,IAAI,OAAO,MAAP,KAAkB,QAAtB,EAAgC;QACxB,IAAA,EAAA,GAAkB,cAAA,CAAA,KAAA,CAAM,kBAAN,CAAyB,MAAzB,CAAlB;QAAA,IAAC,KAAK,GAAA,EAAA,CAAA,KAAN;QAAA,IAAQ,MAAM,GAAA,EAAA,CAAA,MAAd;;QAEN,SAAS,CAAC;UACR,UAAU,EAAE;YAAC,KAAK,EAAA,KAAN;YAAQ,MAAM,EAAA,MAAd;YAAgB,WAAW,EAAE,KAAK,GAAG;UAArC,CADJ;UAER,OAAO,EAAE;QAFD,CAAD,CAAT;QAKA;MACD;;MAED,IAAI,OAAO,MAAP,KAAkB,QAAlB,IAA8B,MAAM,CAAC,GAAzC,EAA8C;QAC5C,SAAS,CAAC;UAAC,OAAO,EAAE;QAAV,CAAD,CAAT;;QAEA,IAAI,OAAO,OAAP,KAAmB,QAAvB,EAAiC;UAC/B,cAAA,CAAA,KAAA,CAAM,kBAAN,CACE,MAAM,CAAC,GADT,EAEE,OAFF,EAGE,UAAC,KAAD,EAAQ,MAAR,EAAc;YACZ,OAAA,SAAS,CAAC;cACR,UAAU,EAAE;gBAAC,KAAK,EAAA,KAAN;gBAAQ,MAAM,EAAA,MAAd;gBAAgB,WAAW,EAAE,KAAK,GAAG;cAArC,CADJ;cAER,OAAO,EAAE;YAFD,CAAD,CAAT;UAGE,CAPN,EAQE,UAAC,KAAD,EAAM;YAAK,OAAA,SAAS,CAAC;cAAC,KAAK,EAAA,KAAN;cAAQ,OAAO,EAAzB;YAAU,CAAD,CAAT;UAAkC,CAR/C;QAUD,CAXD,MAWO;UACL,cAAA,CAAA,KAAA,CAAM,OAAN,CACE,MAAM,CAAC,GADT,EAEE,UAAC,KAAD,EAAQ,MAAR,EAAc;YACZ,OAAA,SAAS,CAAC;cACR,UAAU,EAAE;gBAAC,KAAK,EAAA,KAAN;gBAAQ,MAAM,EAAA,MAAd;gBAAgB,WAAW,EAAE,KAAK,GAAG;cAArC,CADJ;cAER,OAAO,EAAE;YAFD,CAAD,CAAT;UAGE,CANN,EAOE,UAAC,KAAD,EAAM;YAAK,OAAA,SAAS,CAAC;cAAC,KAAK,EAAA,KAAN;cAAQ,OAAO,EAAzB;YAAU,CAAD,CAAT;UAAkC,CAP/C;QASD;;QAED;MACD;;MAED,MAAM,IAAI,KAAJ,CAAU,iBAAV,CAAN;IACD,CA1CD,CA0CE,OAAO,KAAP,EAAc;MACd,SAAS,CAAC;QAAC,KAAK,EAAA,KAAN;QAAQ,OAAO,EAAE;MAAjB,CAAD,CAAT;IACD;EAEF,CA/CD,EA+CG,CAAC,OAAO,MAAP,KAAkB,QAAlB,GAA6B,MAAM,CAAC,GAApC,GAA0C,MAA3C,EAAmD,OAAnD,CA/CH;EAiDA,OAAO,MAAP;AACD;;AAxDD,OAAA,CAAA,kBAAA,GAAA,kBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useImageDimensions = void 0;\nvar react_1 = require(\"react\");\nvar react_native_1 = require(\"react-native\");\n/**\n * @param source either a remote URL or a local file resource.\n * @param headers headers to be passed to a remote URL resource.\n * @returns original image dimensions (width, height and aspect ratio).\n */\nfunction useImageDimensions(source, headers) {\n    var _a = react_1.useState({ loading: true }), result = _a[0], setResult = _a[1];\n    react_1.useEffect(function () {\n        try {\n            if (typeof source === 'number') {\n                var _a = react_native_1.Image.resolveAssetSource(source), width = _a.width, height = _a.height;\n                setResult({\n                    dimensions: { width: width, height: height, aspectRatio: width / height },\n                    loading: false,\n                });\n                return;\n            }\n            if (typeof source === 'object' && source.uri) {\n                setResult({ loading: true });\n                if (typeof headers === 'object') {\n                    react_native_1.Image.getSizeWithHeaders(source.uri, headers, function (width, height) {\n                        return setResult({\n                            dimensions: { width: width, height: height, aspectRatio: width / height },\n                            loading: false,\n                        });\n                    }, function (error) { return setResult({ error: error, loading: false }); });\n                }\n                else {\n                    react_native_1.Image.getSize(source.uri, function (width, height) {\n                        return setResult({\n                            dimensions: { width: width, height: height, aspectRatio: width / height },\n                            loading: false,\n                        });\n                    }, function (error) { return setResult({ error: error, loading: false }); });\n                }\n                return;\n            }\n            throw new Error('not implemented');\n        }\n        catch (error) {\n            setResult({ error: error, loading: false });\n        }\n        // eslint-disable-next-line\n    }, [typeof source === 'object' ? source.uri : source, headers]);\n    return result;\n}\nexports.useImageDimensions = useImageDimensions;\n//# sourceMappingURL=useImageDimensions.js.map"]},"metadata":{},"sourceType":"script"}