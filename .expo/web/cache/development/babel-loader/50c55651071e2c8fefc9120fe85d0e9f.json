{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useClipboard = void 0;\n\nvar react_1 = require(\"react\");\n\nvar react_native_1 = require(\"react-native-web/dist/index\");\n\nvar listeners = new Set();\n\nfunction setString(content) {\n  react_native_1.Clipboard.setString(content);\n  listeners.forEach(function (listener) {\n    return listener(content);\n  });\n}\n\nfunction useClipboard() {\n  var _a = react_1.useState(''),\n      data = _a[0],\n      updateClipboardData = _a[1];\n\n  react_1.useEffect(function () {\n    react_native_1.Clipboard.getString().then(updateClipboardData);\n  }, []);\n  react_1.useEffect(function () {\n    listeners.add(updateClipboardData);\n    return function () {\n      listeners.delete(updateClipboardData);\n    };\n  }, []);\n  return [data, setString];\n}\n\nexports.useClipboard = useClipboard;","map":{"version":3,"sources":["../src/useClipboard.ts"],"names":[],"mappings":";;;;;;;AAAA,IAAA,OAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;;;AAIA,IAAM,SAAS,GAAG,IAAI,GAAJ,EAAlB;;AAEA,SAAS,SAAT,CAAmB,OAAnB,EAAkC;EAChC,cAAA,CAAA,SAAA,CAAU,SAAV,CAAoB,OAApB;EACA,SAAS,CAAC,OAAV,CAAkB,UAAC,QAAD,EAAS;IAAK,OAAA,QAAQ,CAAR,OAAQ,CAAR;EAAiB,CAAjD;AACD;;AAED,SAAgB,YAAhB,GAA4B;EACpB,IAAA,EAAA,GAA8B,OAAA,CAAA,QAAA,CAAS,EAAT,CAA9B;EAAA,IAAC,IAAI,GAAA,EAAA,CAAA,CAAA,CAAL;EAAA,IAAO,mBAAmB,GAAA,EAAA,CAAA,CAAA,CAA1B;;EAGN,OAAA,CAAA,SAAA,CAAU,YAAA;IACR,cAAA,CAAA,SAAA,CAAU,SAAV,GAAsB,IAAtB,CAA2B,mBAA3B;EACD,CAFD,EAEG,EAFH;EAKA,OAAA,CAAA,SAAA,CAAU,YAAA;IACR,SAAS,CAAC,GAAV,CAAc,mBAAd;IAEA,OAAO,YAAA;MACL,SAAS,CAAC,MAAV,CAAiB,mBAAjB;IACD,CAFD;EAGD,CAND,EAMG,EANH;EAQA,OAAO,CAAC,IAAD,EAAO,SAAP,CAAP;AACD;;AAlBD,OAAA,CAAA,YAAA,GAAA,YAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useClipboard = void 0;\nvar react_1 = require(\"react\");\nvar react_native_1 = require(\"react-native\");\nvar listeners = new Set();\nfunction setString(content) {\n    react_native_1.Clipboard.setString(content);\n    listeners.forEach(function (listener) { return listener(content); });\n}\nfunction useClipboard() {\n    var _a = react_1.useState(''), data = _a[0], updateClipboardData = _a[1];\n    // Get initial data\n    react_1.useEffect(function () {\n        react_native_1.Clipboard.getString().then(updateClipboardData);\n    }, []);\n    // Listen for updates\n    react_1.useEffect(function () {\n        listeners.add(updateClipboardData);\n        return function () {\n            listeners.delete(updateClipboardData);\n        };\n    }, []);\n    return [data, setString];\n}\nexports.useClipboard = useClipboard;\n//# sourceMappingURL=useClipboard.js.map"]},"metadata":{},"sourceType":"script"}