{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useDeviceOrientation = void 0;\n\nvar react_1 = require(\"react\");\n\nvar react_native_1 = require(\"react-native-web/dist/index\");\n\nvar isOrientationPortrait = function isOrientationPortrait(_a) {\n  var width = _a.width,\n      height = _a.height;\n  return height >= width;\n};\n\nvar isOrientationLandscape = function isOrientationLandscape(_a) {\n  var width = _a.width,\n      height = _a.height;\n  return width >= height;\n};\n\nfunction useDeviceOrientation() {\n  var screen = react_native_1.Dimensions.get('screen');\n  var initialState = {\n    portrait: isOrientationPortrait(screen),\n    landscape: isOrientationLandscape(screen)\n  };\n\n  var _a = react_1.useState(initialState),\n      orientation = _a[0],\n      setOrientation = _a[1];\n\n  react_1.useEffect(function () {\n    var onChange = function onChange(_a) {\n      var screen = _a.screen;\n      setOrientation({\n        portrait: isOrientationPortrait(screen),\n        landscape: isOrientationLandscape(screen)\n      });\n    };\n\n    var subscription = react_native_1.Dimensions.addEventListener('change', onChange);\n    return function () {\n      if (typeof (subscription === null || subscription === void 0 ? void 0 : subscription.remove) === 'function') {\n        subscription.remove();\n      } else {\n        react_native_1.Dimensions.removeEventListener('change', onChange);\n      }\n    };\n  }, []);\n  return orientation;\n}\n\nexports.useDeviceOrientation = useDeviceOrientation;","map":{"version":3,"sources":["../src/useDeviceOrientation.ts"],"names":[],"mappings":";;;;;;;AAAA,IAAA,OAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;;;AAGA,IAAM,qBAAqB,GAAG,SAAxB,qBAAwB,CAAC,EAAD,EAA4B;MAA1B,KAAK,GAAA,EAAA,CAAA,K;MAAE,MAAM,GAAA,EAAA,CAAA,M;EAAkB,OAAA,MAAM,IAAI,KAAV;AAAe,CAA9E;;AACA,IAAM,sBAAsB,GAAG,SAAzB,sBAAyB,CAAC,EAAD,EAA4B;MAA1B,KAAK,GAAA,EAAA,CAAA,K;MAAE,MAAM,GAAA,EAAA,CAAA,M;EAAkB,OAAA,KAAK,IAAI,MAAT;AAAe,CAA/E;;AAEA,SAAgB,oBAAhB,GAAoC;EAClC,IAAM,MAAM,GAAG,cAAA,CAAA,UAAA,CAAW,GAAX,CAAe,QAAf,CAAf;EACA,IAAM,YAAY,GAAG;IACnB,QAAQ,EAAE,qBAAqB,CAAC,MAAD,CADZ;IAEnB,SAAS,EAAE,sBAAsB,CAAC,MAAD;EAFd,CAArB;;EAKM,IAAA,EAAA,GAAgC,OAAA,CAAA,QAAA,CAAS,YAAT,CAAhC;EAAA,IAAC,WAAW,GAAA,EAAA,CAAA,CAAA,CAAZ;EAAA,IAAc,cAAc,GAAA,EAAA,CAAA,CAAA,CAA5B;;EAEN,OAAA,CAAA,SAAA,CAAU,YAAA;IACR,IAAM,QAAQ,GAAG,SAAX,QAAW,CAAC,EAAD,EAA+B;UAA7B,MAAM,GAAA,EAAA,CAAA,M;MACvB,cAAc,CAAC;QACb,QAAQ,EAAE,qBAAqB,CAAC,MAAD,CADlB;QAEb,SAAS,EAAE,sBAAsB,CAAC,MAAD;MAFpB,CAAD,CAAd;IAID,CALD;;IAOA,IAAM,YAAY,GAAG,cAAA,CAAA,UAAA,CAAW,gBAAX,CAA4B,QAA5B,EAAsC,QAAtC,CAArB;IAEA,OAAO,YAAA;MAEL,IAAI,QAAO,YAAY,KAAA,IAAZ,IAAA,YAAY,KAAA,KAAA,CAAZ,GAAY,KAAA,CAAZ,GAAA,YAAY,CAAE,MAArB,MAAgC,UAApC,EAAgD;QAE9C,YAAY,CAAC,MAAb;MACD,CAHD,MAGO;QAEL,cAAA,CAAA,UAAA,CAAW,mBAAX,CAA+B,QAA/B,EAAyC,QAAzC;MACD;IACF,CATD;EAUD,CApBD,EAoBG,EApBH;EAsBA,OAAO,WAAP;AACD;;AAhCD,OAAA,CAAA,oBAAA,GAAA,oBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useDeviceOrientation = void 0;\nvar react_1 = require(\"react\");\nvar react_native_1 = require(\"react-native\");\nvar isOrientationPortrait = function (_a) {\n    var width = _a.width, height = _a.height;\n    return height >= width;\n};\nvar isOrientationLandscape = function (_a) {\n    var width = _a.width, height = _a.height;\n    return width >= height;\n};\nfunction useDeviceOrientation() {\n    var screen = react_native_1.Dimensions.get('screen');\n    var initialState = {\n        portrait: isOrientationPortrait(screen),\n        landscape: isOrientationLandscape(screen),\n    };\n    var _a = react_1.useState(initialState), orientation = _a[0], setOrientation = _a[1];\n    react_1.useEffect(function () {\n        var onChange = function (_a) {\n            var screen = _a.screen;\n            setOrientation({\n                portrait: isOrientationPortrait(screen),\n                landscape: isOrientationLandscape(screen),\n            });\n        };\n        var subscription = react_native_1.Dimensions.addEventListener('change', onChange);\n        return function () {\n            // @ts-expect-error - React Native >= 0.65\n            if (typeof (subscription === null || subscription === void 0 ? void 0 : subscription.remove) === 'function') {\n                // @ts-expect-error - need update @types/react-native@0.65.x\n                subscription.remove();\n            }\n            else {\n                // React Native < 0.65\n                react_native_1.Dimensions.removeEventListener('change', onChange);\n            }\n        };\n    }, []);\n    return orientation;\n}\nexports.useDeviceOrientation = useDeviceOrientation;\n//# sourceMappingURL=useDeviceOrientation.js.map"]},"metadata":{},"sourceType":"script"}