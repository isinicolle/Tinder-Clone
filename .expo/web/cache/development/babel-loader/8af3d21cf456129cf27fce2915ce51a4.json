{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useAccessibilityInfo = void 0;\n\nvar react_1 = require(\"react\");\n\nvar react_native_1 = require(\"react-native-web/dist/index\");\n\nfunction useAccessibilityStateListener(eventName, initializerName) {\n  var _a = react_1.useState(undefined),\n      isEnabled = _a[0],\n      setIsEnabled = _a[1];\n\n  react_1.useEffect(function () {\n    if (!react_native_1.AccessibilityInfo[initializerName]) {\n      return;\n    }\n\n    react_native_1.AccessibilityInfo[initializerName]().then(setIsEnabled);\n    var subscription = react_native_1.AccessibilityInfo.addEventListener(eventName, setIsEnabled);\n    return function () {\n      if (typeof (subscription === null || subscription === void 0 ? void 0 : subscription.remove) === 'function') {\n        subscription.remove();\n      } else {\n        react_native_1.AccessibilityInfo.removeEventListener(eventName, setIsEnabled);\n      }\n    };\n  }, [eventName, initializerName]);\n  return isEnabled;\n}\n\nfunction useAccessibilityInfo() {\n  var boldTextEnabled = useAccessibilityStateListener('boldTextChanged', 'isBoldTextEnabled');\n  var grayscaleEnabled = useAccessibilityStateListener('grayscaleChanged', 'isGrayscaleEnabled');\n  var invertColorsEnabled = useAccessibilityStateListener('invertColorsChanged', 'isInvertColorsEnabled');\n  var reduceMotionEnabled = useAccessibilityStateListener('reduceMotionChanged', 'isReduceMotionEnabled');\n  var reduceTransparencyEnabled = useAccessibilityStateListener('reduceTransparencyChanged', 'isReduceTransparencyEnabled');\n  var screenReaderEnabled = useAccessibilityStateListener('screenReaderChanged', 'isScreenReaderEnabled');\n  return {\n    screenReaderEnabled: screenReaderEnabled,\n    grayscaleEnabled: grayscaleEnabled,\n    invertColorsEnabled: invertColorsEnabled,\n    reduceMotionEnabled: reduceMotionEnabled,\n    reduceTransparencyEnabled: reduceTransparencyEnabled,\n    boldTextEnabled: boldTextEnabled\n  };\n}\n\nexports.useAccessibilityInfo = useAccessibilityInfo;","map":{"version":3,"sources":["../src/useAccessibilityInfo.ts"],"names":[],"mappings":";;;;;;;AAAA,IAAA,OAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;;;AAWA,SAAS,6BAAT,CACE,SADF,EAEE,eAFF,EAEsD;EAE9C,IAAA,EAAA,GAA4B,OAAA,CAAA,QAAA,CAA8B,SAA9B,CAA5B;EAAA,IAAC,SAAS,GAAA,EAAA,CAAA,CAAA,CAAV;EAAA,IAAY,YAAY,GAAA,EAAA,CAAA,CAAA,CAAxB;;EAEN,OAAA,CAAA,SAAA,CAAU,YAAA;IACR,IAAI,CAAC,cAAA,CAAA,iBAAA,CAAkB,eAAlB,CAAL,EAAyC;MACvC;IACD;;IAED,cAAA,CAAA,iBAAA,CAAkB,eAAlB,IAAqC,IAArC,CAA0C,YAA1C;IAEA,IAAM,YAAY,GAAG,cAAA,CAAA,iBAAA,CAAkB,gBAAlB,CACnB,SADmB,EAEnB,YAFmB,CAArB;IAKA,OAAO,YAAA;MAEL,IAAI,QAAO,YAAY,KAAA,IAAZ,IAAA,YAAY,KAAA,KAAA,CAAZ,GAAY,KAAA,CAAZ,GAAA,YAAY,CAAE,MAArB,MAAgC,UAApC,EAAgD;QAE9C,YAAY,CAAC,MAAb;MACD,CAHD,MAGO;QAEL,cAAA,CAAA,iBAAA,CAAkB,mBAAlB,CAAsC,SAAtC,EAAiD,YAAjD;MACD;IACF,CATD;EAUD,CAtBD,EAsBG,CAAC,SAAD,EAAY,eAAZ,CAtBH;EAwBA,OAAO,SAAP;AACD;;AAED,SAAgB,oBAAhB,GAAoC;EAClC,IAAM,eAAe,GAAG,6BAA6B,CACnD,iBADmD,EAEnD,mBAFmD,CAArD;EAIA,IAAM,gBAAgB,GAAG,6BAA6B,CACpD,kBADoD,EAEpD,oBAFoD,CAAtD;EAIA,IAAM,mBAAmB,GAAG,6BAA6B,CACvD,qBADuD,EAEvD,uBAFuD,CAAzD;EAIA,IAAM,mBAAmB,GAAG,6BAA6B,CACvD,qBADuD,EAEvD,uBAFuD,CAAzD;EAIA,IAAM,yBAAyB,GAAG,6BAA6B,CAC7D,2BAD6D,EAE7D,6BAF6D,CAA/D;EAIA,IAAM,mBAAmB,GAAG,6BAA6B,CACvD,qBADuD,EAEvD,uBAFuD,CAAzD;EAKA,OAAO;IACL,mBAAmB,EAAA,mBADd;IAEL,gBAAgB,EAAA,gBAFX;IAGL,mBAAmB,EAAA,mBAHd;IAIL,mBAAmB,EAAA,mBAJd;IAKL,yBAAyB,EAAA,yBALpB;IAML,eAAe,EAAA;EANV,CAAP;AAQD;;AAlCD,OAAA,CAAA,oBAAA,GAAA,oBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useAccessibilityInfo = void 0;\nvar react_1 = require(\"react\");\nvar react_native_1 = require(\"react-native\");\nfunction useAccessibilityStateListener(eventName, initializerName) {\n    var _a = react_1.useState(undefined), isEnabled = _a[0], setIsEnabled = _a[1];\n    react_1.useEffect(function () {\n        if (!react_native_1.AccessibilityInfo[initializerName]) {\n            return;\n        }\n        react_native_1.AccessibilityInfo[initializerName]().then(setIsEnabled);\n        var subscription = react_native_1.AccessibilityInfo.addEventListener(eventName, setIsEnabled);\n        return function () {\n            // @ts-expect-error - React Native >= 0.65\n            if (typeof (subscription === null || subscription === void 0 ? void 0 : subscription.remove) === 'function') {\n                // @ts-expect-error - need update @types/react-native@0.65.x\n                subscription.remove();\n            }\n            else {\n                // React Native < 0.65\n                react_native_1.AccessibilityInfo.removeEventListener(eventName, setIsEnabled);\n            }\n        };\n    }, [eventName, initializerName]);\n    return isEnabled;\n}\nfunction useAccessibilityInfo() {\n    var boldTextEnabled = useAccessibilityStateListener('boldTextChanged', 'isBoldTextEnabled');\n    var grayscaleEnabled = useAccessibilityStateListener('grayscaleChanged', 'isGrayscaleEnabled');\n    var invertColorsEnabled = useAccessibilityStateListener('invertColorsChanged', 'isInvertColorsEnabled');\n    var reduceMotionEnabled = useAccessibilityStateListener('reduceMotionChanged', 'isReduceMotionEnabled');\n    var reduceTransparencyEnabled = useAccessibilityStateListener('reduceTransparencyChanged', 'isReduceTransparencyEnabled');\n    var screenReaderEnabled = useAccessibilityStateListener('screenReaderChanged', 'isScreenReaderEnabled');\n    return {\n        screenReaderEnabled: screenReaderEnabled,\n        grayscaleEnabled: grayscaleEnabled,\n        invertColorsEnabled: invertColorsEnabled,\n        reduceMotionEnabled: reduceMotionEnabled,\n        reduceTransparencyEnabled: reduceTransparencyEnabled,\n        boldTextEnabled: boldTextEnabled,\n    };\n}\nexports.useAccessibilityInfo = useAccessibilityInfo;\n//# sourceMappingURL=useAccessibilityInfo.js.map"]},"metadata":{},"sourceType":"script"}